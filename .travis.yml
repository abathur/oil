# https://docs.travis-ci.com/user/reference/xenial/#python-support
# It says Xenial has Python 2.7, 3.6, and 3.7 (?)
# We're not using language: python because that creates a virtualenv, which is
# specific to a Python version.  MyPy needs both in the same environment.
---

# Travis-ci's default language is ruby. Using minimal, which is an alias for
# shell, to avoid pulling in an unnecessary language.
language: minimal
os: linux

# This first section sets up building blocks used later to compose the actual
# CI jobs. The &<identifier> syntax is an *anchor*. Later in the jobs section
# these anchors will be referred to with the *<identifier> (alias) syntax.

# This building block should take mostly platform-independent steps
# necessary to perform dev-minimal in-tree build.
_minimal_in_tree: &minimal_in_tree
  before_install:
    - test/spec.sh link-busybox-ash
  install:
    - pip install --user flake8 typing
    # mypy requires Python 3
    - pip3 install --user mypy
    # hack for cmark
    - build/dev.sh minimal
  script:
    - ./test.sh

# This building block does most of the work for all nix-based builds
# additional building blocks just add/modify this template.
_nix_full: &nix_full
  language: nix

  script:
    - echo build command = $NIX_BUILD_TYPE
    - $NIX_BUILD_TYPE

# This building block adds some macos-specific setup to support nix builds.
_nix_macos: &nix_macos
  os: osx

# The next two building blocks specify which build command Nix should use.
_nix_build: &nix_build
  env: NIX_BUILD_TYPE='nix-build'

_nix_shell: &nix_shell
  env: NIX_BUILD_TYPE="nix-shell --pure --run ./test.sh"

jobs:
  include:
  # macOS builds tend to take longer; let's see if
  # starting them first cuts total run clock time
  - name: "dev-minimal in-tree macos"
    os: osx
    # The <<: syntax merges the corresponding *<identifier>
    # building block in at this location.
    <<: *minimal_in_tree
    cache:
      - brew
      - pip

  - name: "dev-all/pyoil nix-build macos"
    <<: *nix_build
    <<: *nix_full
    <<: *nix_macos

  - name: "dev-all/pyoil nix-shell macos"
    <<: *nix_shell
    <<: *nix_full
    <<: *nix_macos

  - name: "dev-minimal in-tree linux"
    <<: *minimal_in_tree
    os: linux
    dist: xenial
    cache:
      - apt
      - pip
    addons:
      apt:
        packages:
          - python-dev
          - gawk
          - time
          - libreadline-dev
          # test/spec.sh install-shells
          - busybox-static
          - mksh
          - zsh
          # since we're not using language: python
          - python3-setuptools
          - python-pip
          - python3-pip


  - name: "dev-all/pyoil nix-build linux"
    os: linux
    <<: *nix_build
    <<: *nix_full

  - name: "dev-all/pyoil nix-shell linux"
    os: linux
    <<: *nix_shell
    <<: *nix_full

  # report status when required jobs finish
  fast_finish: true
  allow_failures:
  - os: osx
  - language: nix

notifications:
    on_success: change
    on_failure: change  # `always` will be the setting once code changes slow down

# from https://docs.travis-ci.com/user/deployment/script/
deploy:
    # deploy develop to the staging environment
    - provider: script
      script: services/travis.sh publish-html
      on:
          branch: master
          #branch: dev/andy-21

env:
  global:
    # Enable this to quickly test the deploy step at the end
    - TRAVIS_SKIP=''
